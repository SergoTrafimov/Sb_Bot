import asyncio
import time
import sqlite3
import fnmatch
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import Command, ChatMemberUpdatedFilter, IS_NOT_MEMBER, IS_MEMBER
from aiogram.utils.keyboard import InlineKeyboardBuilder, InlineKeyboardButton
from aiogram.types import ChatPermissions, ChatMemberUpdated, ContentType
from aiogram.enums import ChatMemberStatus
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from uidtsb import get_user_simple

ALLOWED_CHANNELS = [-1001620433786, -1001372687943, -1001536772735, -1001667805833,
                    -1002345911986, -1001768096856, -1001640821962, -1001564386161,
                    -1001925689412, -1001682049112, -1001360911185, -1001683532449,
                    -1001628633023, -1001663074595, -1001573970133, -1001637258570,
                    -1001654742345, -1001951614079]

ida=[1758430459, 1042704010, 1132619666, 1329032674, 157398547, 1722862662]

TOKEN = "5840636568:AAE5ieurhmd0HW2FY-KTd5cpA4flRnCuhmI"
TO_CHAT_ID = 1758430459
get_chat_id = -1002308587530

bot = Bot(token=TOKEN)
dp = Dispatcher()
db = sqlite3.connect('sb.db')
cursor = db.cursor()

helpt = ('–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª:\n'
        '/warn - –≤—ã–¥–∞–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –ø—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ 3 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—É–¥–µ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω. –†–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ, —Ç–∞–∫ –∏ —á–µ—Ä–µ–∑ "—Å–æ–±–∞—á–∫—É".'
        '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –ø—Ä–∏—á–∏–Ω—É\n\n'
        '/unwarn - —Å–Ω–∏–º–∞–µ—Ç —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–¥–Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ, –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ –ø–æ –æ—Ç–≤–µ—Ç—É, –∏ –ø–æ —É–ø–æ–º–∏–Ω–∞–Ω–∏—é.\n\n'
        '/ban - –±–ª–æ–∫–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–∞—Ç–µ. –†–∞–±–æ—Ç–∞–µ—Ç –ø–æ –æ—Ç–≤–µ—Ç—É –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –ø–æ —É–ø–æ–º–∏–Ω–∞–Ω–∏—é.\n\n'
        '/unban - —É–±–∏—Ä–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞.\n\n'
        '/mute - –Ω–∞–∫–ª–∞–¥—ã–≤–∞–µ—Ç –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–ø—Ä–µ—Ç –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π. –°–∏–Ω—Ç–∞–∫—Å–∏—Å —Å–ª–µ–¥—É—é—â–∏–π:\n\n'
        '/mute @Vvvvvvvvv222221 1 d/h/m\n'
        '–ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏ —á–µ—Ä–µ–∑ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ, —Ç–æ–≥–¥–∞ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –Ω–µ –Ω—É–∂–Ω–æ –ø–∏—Å–∞—Ç—å. –ï—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞—Ç—å –≤—Ä–µ–º—è —Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—É–¥–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω –Ω–∞–≤—Å–µ–≥–¥–∞.\n\n'
        '/unmute - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–∞–≤–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è. –†–∞–±–æ—Ç–∞–µ—Ç –ø–æ –æ—Ç–≤–µ—Ç—É –∏–ª–∏ —á–µ—Ä–µ–∑ ¬´—Å–æ–±–∞—á–∫—É¬ª.\n\n'
        '/rules - –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —á–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏.\n\n'
        '/report - –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–µ–ø—Ç–∞–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∂–∞–ª–æ–±–µ –∏ —Å–∞–º–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–∂–∞–ª–æ–≤–∞–ª–∏—Å—å.\n\n'
        '/debag - –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–∑–¥–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ, –µ—Å–ª–∏ —Ç–∞–∫–æ–≤–∞—è –µ—Å—Ç—å.\n\n'
        '/chatoff - –≤—ã–∫–ª—é—á–∞–µ—Ç —á–∞—Ç.\n\n'
        '/chaton - –≤–∫–ª—é—á–∞–µ—Ç —á–∞—Ç.\n\n'
        '/off - –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –±–æ—Ç–∞.\n\n'
        '/on - –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –±–æ—Ç–∞.\n\n'
        '/help - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ(—Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–∫–µ —Å –±–æ—Ç–æ–º\n\n'
        '/ping - –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–∏–Ω–≥–æ–≤–∞–Ω–∏—è.\n\n\n\n'
        '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è–µ—Ç –∫–æ–º–∞–Ω–¥—ã –æ—Ç —Ç–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —è–≤–ª—è—é—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏, –∞ —Ç–∞–∫–∂–µ —Å—Ä–∞–∑—É —É–¥–∞–ª—è–µ—Ç –∫–æ–º–∞–Ω–¥—ã (—á–µ—Ä–µ–∑ /) –æ—Ç —Å–∞–º–∏ –∞–¥–º–∏–Ω–æ–≤ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ —Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º –∫–æ–º–∞–Ω–¥—ã.\n'
        '–ù–µ —Ç—Ä–µ–±—É–µ—Ç —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ - —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—ã –æ—Ç —Ç–µ—Ö, –∫—Ç–æ –∏–º–µ–µ—Ç ¬´–∑–≤–∞–Ω–∏–µ¬ª (–æ–Ω –∂–µ –ø—Ä–µ—Ñ–∏–∫—Å).\n\n'
        '–£–º–µ–µ—Ç –±–∞–Ω–∏—Ç—å —Ç–µ —Å—Å—ã–ª–∫–∏, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –≤ ¬´–±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ¬ª.\n\n'
        '–ò–º–µ–µ—Ç ¬´–±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫¬ª, –≤–∫–ª—é—á–∞—é—â–∏–π –≤ —Å–µ–±—è –∫–∞–Ω–∞–ª—ã, –æ—Ç –ª–∏—Ü–∞ –∫–æ—Ç–æ—Ä—ã—Ö –ø–∏—à—É—Ç –ë–∞–Ω–¥–∏—Ç—ã, –∏ —Å—Å—ã–ª–∫–∏ —Å —Ä–µ—Å—É—Ä—Å–∞–º–∏.\n\n'
        '–¢–∞–∫ –∂–µ –≤ –±–æ—Ç–∞ –≤—Å—Ç—Ä–æ–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–∞–≤–∏–ª –ø–æ–¥ –Ω–æ–≤—ã–µ –ø–æ—Å—Ç—ã –≤ —Ç–≥ –∫–∞–Ω–∞–ª–µ.\n\n'
        '–§–∏–ª—å—Ç—Ä –º–∞—Ç–∞\n\n'
        '–§–∏–ª—å—Ç—Ä —Å—Å—ã–ª–æ–∫\n\n'
        '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n\n')


tt = (
    "1) –±—É–¥—å –≤–µ–∂–ª–∏–≤ –∫ –¥—Ä—É–≥–∏–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –∏ –Ω–µ –Ω–∞—Ä—É—à–∞–π –∞—Ç–º–æ—Å—Ñ–µ—Ä—É —á–∞—Ç–∞; \n2) —Ä–µ–∫–ª–∞–º–∞ —á–µ–≥–æ —É–≥–æ–¥–Ω–æ (—Å—Å—ã–ª–∫–∏) –∑–∞–ø—Ä–µ—â–µ–Ω–∞;\n"
    "3) —Å–ø–∞–º, –ø–æ–ª–∏—Ç–∏–∫–∞, —Ä–µ–ª–∏–≥–∏—è, –∞–≥—Ä–µ—Å—Å–∏—è –Ω–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é—Ç—Å—è;\n"
    "4) –º–∞—Ç –∑–∞–ø—Ä–µ—â—ë–Ω! –±–æ—Ç –Ω–µ –ø–æ—â–∞–¥–∏—Ç;\n"
    "5) –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –Ω–µ –±–æ–ª–µ–µ –¥–≤—É—Ö —Å—Ç–∏–∫–µ—Ä–æ–≤ –ø–æ–¥—Ä—è–¥;\n"
    "6) –±—É–¥—å—Ç–µ –∫–æ—Ç–∏–∫–∞–º–∏;\n"
    "7) –∑–∞ –∫–æ–Ω—Ç–µ–Ω—Ç —Å–µ–∫—Å—É–∞–ª—å–Ω–æ–≥–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞ –∏–ª–∏ –∂–µ –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–ø—Ä–∏—è—Ç–Ω—ã–º –¥–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞, –∞ —Ç–∞–∫ –∂–µ –∑–∞ —Å–ø–æ–π–ª–µ—Ä—ã –≤—ã–¥–∞—ë—Ç—Å—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ.\n"
    "–ß—Ç–æ–±—ã –Ω–µ –ø–æ–ª—É—á–∞—Ç—å –∏—Ö –∑–∞ —Å–ø–æ–π–ª–µ—Ä—ã –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é —Å–∫—Ä—ã—Ç–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è (–≤ –Ω–∞—á–∞–ª–µ –∏ –≤ –∫–æ–Ω—Ü–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Å—Ç–∞–≤–∏—Ç—å ||).\n"
    "8) –≠—Ç–æ—Ç —á–∞—Ç - —Å–≤–æ–±–æ–¥–Ω–∞—è –∑–æ–Ω–∞ –æ—Ç –ì–µ–Ω—à–∏–Ω–∞/–ë—Ä–∞–≤–ª –°—Ç–∞—Ä—Å–∞.\n"
    "9) –°–º–æ—Ç—Ä–∏—Ç–µ –∞–Ω–∏–º–µ –≥–¥–µ —É–≥–æ–¥–Ω–æ, –Ω–æ –≤ —á–∞—Ç –Ω–µ –∫–∏–¥–∞–π—Ç–µ —Å—Å—ã–ª–∫–∏/–Ω–∞–∑–≤–∞–Ω–∏—è —Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤.\n"
    "10) –ù–µ –∫–∏–¥–∞–π—Ç–µ —Å–≤–æ–∏ –æ–∑–≤—É—á–∫–∏. –ñ–¥–∏—Ç–µ –∫–æ–Ω–∫—É—Ä—Å—ã.\n"
    "11) –Ø–∑—ã–∫ —á–∞—Ç–∞ - —Ä—É—Å—Å–∫–∏–π")


file = open('banwords.txt', 'r', encoding='utf-8')
banwordlist = []
for i in file:
    banwordlist.append(i.replace('\n', '', 1))
file.close()
f = open('urlwhitelist.txt', 'r')
wlu = []
for i in f:
    wlu.append(i.replace('\n', '', 1))
f.close()
l = open('banwordsprof.txt', 'r', encoding='utf-8')
bwp =[]
for i in l:
    bwp.append(i.replace('\n', '', 1))
l.close()

g = InlineKeyboardBuilder()
g.add(InlineKeyboardButton(text="–ó–∞–ø—Ä–µ—Ç–∏—Ç—å –ø–∏—Å–∞—Ç—å –Ω–∞—Ä—É—à–∏—Ç–µ–ª—é 1 —á–∞—Å", callback_data="mn"))
g.add(InlineKeyboardButton(text="‚ùóÔ∏è–ó–∞–ø—Ä–µ—Ç–∏—Ç—å –ø–∏—Å–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—é 1 —á–∞—Å", callback_data="mo"))
g.add(InlineKeyboardButton(text="–ó–∞–±–∞–Ω–∏—Ç—å –Ω–∞—Ä—É—à–∏—Ç–µ–ª—è", callback_data="bn"))
g.add(InlineKeyboardButton(text="‚ùóÔ∏è–ó–∞–±–∞–Ω–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è", callback_data="bo"))
g.add(InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ", callback_data="dd"))
g.add(InlineKeyboardButton(text="–ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å", callback_data="sk"))
g.adjust(1)

captcha = InlineKeyboardBuilder()
captcha.add(InlineKeyboardButton(text='–ü—Ä–æ–π—Ç–∏ –ø—Ä–æ–≤–µ—Ä–∫—É', callback_data='cpt'))

on = 1

@dp.message(Command('off'))
async def vkl(message: types.Message):
    global on
    chat_id = message.chat.id
    user_id = message.from_user.id
    if await is_user_admin(chat_id, user_id) or (message.sender_chat and message.sender_chat.type == "channel" and message.sender_chat.id == -1001951614079):
        on = 0
        await message.reply('–ë–æ—Ç –≤—ã–∫–ª—é—á–µ–Ω, —á—Ç–æ–±—ã –≤–∫–ª—é—á–∏—Ç—å –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /on')
        await message.delete()
    else:
        await message.reply('–≠—Ç–∞ —à—Ç—É—á–∫–∞ –¥–ª—è –∞–¥–º–∏–Ω–∞')

@dp.message(Command('on'))
async def vkl(message: types.Message):
    global on
    chat_id = message.chat.id
    user_id = message.from_user.id
    if await is_user_admin(chat_id, user_id) or (message.sender_chat and message.sender_chat.type == "channel" and message.sender_chat.id == -1001951614079):
        on = 1
        await message.reply('–ë–æ—Ç –≤–∫–ª—é—á–µ–Ω, —á—Ç–æ–±—ã –≤—ã–∫–ª—é—á–∏—Ç—å –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /off')
        await message.delete()
    else:
        await message.delete()


async def open_chat_full_permissions(message: types.Message):
    chat_id = message.chat.id
    user_id = message.from_user.id

    if not (await is_user_admin(chat_id, user_id) or (message.sender_chat and message.sender_chat.type == "channel" and message.sender_chat.id == -1001951614079)):
        await message.delete()
        return

    try:

        full_permissions = ChatPermissions(
            # –¢–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            can_send_messages=True,

            # –ú–µ–¥–∏–∞ –∫–æ–Ω—Ç–µ–Ω—Ç
            can_send_media_messages=True,
            can_send_photos=True,
            can_send_videos=True,
            can_send_video_notes=False,
            can_send_audios=True,
            can_send_documents=True,
            can_send_other_messages=True,
            can_send_voice_notes=False,
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
            can_add_web_page_previews=True,
            can_send_polls=False,
            # –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –ø—Ä–∞–≤–∞ (–æ–±—ã—á–Ω–æ –æ—Å—Ç–∞–≤–ª—è–µ–º –≤—ã–∫–ª—é—á–µ–Ω–Ω—ã–º–∏)
            can_change_info=False,
            can_invite_users=False,
            can_pin_messages=False,
            can_manage_topics=False
        )

        # –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫ –≥—Ä—É–ø–ø–µ
        await bot.set_chat_permissions(chat_id, full_permissions)
        await message.reply(
            "üîì–ß–∞—Ç –æ—Ç–∫—Ä—ã—Ç —Å –ø–æ–ª–Ω—ã–º–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è–º–∏!\n\n"
            "–ê–¥–µ–ø—Ç, –≤—ã–∫–ª—é—á–∏ –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è!")
        await message.delete()

    except Exception as e:
        await message.reply(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —á–∞—Ç–∞: {str(e)}")
        await message.delete()


async def close_chat_no_permissions(message: types.Message):
    chat_id = message.chat.id
    user_id = message.from_user.id

    if not (await is_user_admin(chat_id, user_id) or (message.sender_chat and message.sender_chat.type == "channel" and message.sender_chat.id == -1001951614079)):
        await message.delete()
        return

    try:
        # –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞
        restricted_permissions = ChatPermissions(
            can_send_messages=False,
            can_send_media_messages=False,
            can_send_photos=False,
            can_send_videos=False,
            can_send_video_notes=False,
            can_send_audios=False,
            can_send_documents=False,
            can_add_web_page_previews=False,
            can_send_polls=False,
            can_change_info=False,
            can_invite_users=False,
            can_pin_messages=False,
            can_manage_topics=False
        )

        await bot.set_chat_permissions(chat_id, restricted_permissions)

        await message.reply("üîí –ß–∞—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–∫—Ä—ã—Ç!\n\n")
        await message.delete()

    except Exception as e:
        await message.reply(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —á–∞—Ç–∞: {str(e)}")
        await message.delete()

@dp.message(Command("chaton"))
async def handle_chaton(message: types.Message):
    await open_chat_full_permissions(message)

@dp.message(Command("chatoff"))
async def handle_chatoff(message: types.Message):
    await close_chat_no_permissions(message)

@dp.callback_query(lambda i: i.data in ['mn', 'mo', 'bn', 'bo', 'dd', 'sk', "cpt"])
async def rep(callback: types.CallbackQuery):
    global opid, nid, rmessage_id, rchat_id, opun, nun, nuid
    if callback.data == 'mn':
        permissions = ChatPermissions(can_send_messages=False)
        until_date = time.time() + 3600
        await bot.restrict_chat_member(rchat_id, nid, permissions, until_date=until_date)
        await bot.send_message(rchat_id, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{nun} –∑–∞–º—É—á–µ–Ω –Ω–∞ 1 —á–∞—Å.")
        chat_id = callback.from_user.id
        await bot.send_message(chat_id, "–ì–æ—Ç–æ–≤–æ")
        await bot.delete_message(callback.message.chat.id, callback.message.message_id)
    if callback.data == 'mo':
        permissions = ChatPermissions(can_send_messages=False)
        until_date = time.time() + 3600
        await bot.restrict_chat_member(rchat_id, opid, permissions, until_date=until_date)
        await bot.send_message(rchat_id, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{opun} –∑–∞–º—É—á–µ–Ω –Ω–∞ 1 —á–∞—Å.")
        chat_id = callback.from_user.id
        await bot.send_message(chat_id, "–ì–æ—Ç–æ–≤–æ")
        await bot.delete_message(callback.message.chat.id, callback.message.message_id)
    if callback.data == 'bn':
        await bot.ban_chat_member(rchat_id, nid)
        await bot.send_message(rchat_id, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{nun} –∑–∞–±–∞–Ω–µ–Ω")
        chat_id = callback.from_user.id
        await bot.send_message(chat_id, "–ì–æ—Ç–æ–≤–æ")
        await bot.delete_message(callback.message.chat.id, callback.message.message_id)
    if callback.data == 'bo':
        chat_id=callback.from_user.id
        await bot.ban_chat_member(rchat_id, nid)
        await bot.send_message(rchat_id, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{opun} –∑–∞–±–∞–Ω–µ–Ω")
        await bot.send_message(chat_id, "–ì–æ—Ç–æ–≤–æ")
        await bot.send_message(chat_id, "–ì–æ—Ç–æ–≤–æ")
        await bot.delete_message(callback.message.chat.id, callback.message.message_id)
    if callback.data == "dd":
        await bot.delete_message(rchat_id, rmessage_id)
        chat_id=callback.from_user.id
        await bot.send_message(chat_id, "–ì–æ—Ç–æ–≤–æ")
        await bot.delete_message(callback.message.chat.id, callback.message.message_id)
    if callback.data == "sk":
        await bot.delete_message(callback.message.chat.id, callback.message.message_id)
    if callback.data == "cpt":
        if callback.from_user.id == nuid:
            chatid = callback.message.chat.id
            permissions = ChatPermissions(
                can_send_messages=True,
                can_send_media_messages=True,
                can_send_other_messages=True,
                can_add_web_page_previews=True
            )
            await bot.restrict_chat_member(chatid, callback.from_user.id, permissions)
            await callback.answer(
                "–û—Ç–ª–∏—á–Ω–æ! –í—ã —á–µ–ª–æ–≤–µ–∫, –ø—Ä–∏—è—Ç–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è",
                show_alert=True )
            await callback.message.edit_reply_markup(reply_markup=None)
        else:
            await callback.answer(
                f"‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ!\n\n–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è {nuf}",
                show_alert=True)




class DebugState(StatesGroup):
    waiting_for_debug_message = State()


class AutorState(StatesGroup):
    waiting_for_autor_response = State()


async def is_user_admin(chat_id: int, user_id: int) -> bool:
    try:
        chat_member = await bot.get_chat_member(chat_id, user_id)

        if chat_member.status in [
            ChatMemberStatus.ADMINISTRATOR,
            ChatMemberStatus.CREATOR
        ]:
            return True

        else:
            return False

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {e}")
        return False

@dp.message(Command('warn'))
async def warn_user(message: types.Message):
    if on == 1:
        chat_id = message.chat.id
        user_id = message.from_user.id
        ap = message.from_user.username

        if await is_user_admin(chat_id, user_id) or (message.sender_chat and message.sender_chat.type == "channel" and message.sender_chat.id == -1001951614079):

            try:
                if not message.reply_to_message:
                    t = message.text.split(maxsplit=2)
                    up = t[1]
                    pr = t[2]
                    if up[0] == '@':
                        up = up.replace('@', '', 1)
                        user_to_warn = await get_user_simple(up)
                else:
                    t = message.text.split( maxsplit=1)
                    pr = t[1]
                    user_to_warn = message.reply_to_message.from_user.id
                    up = message.reply_to_message.from_user.username
                try:
                    cursor.execute("SELECT warning FROM warnlist WHERE uid=" + str(user_to_warn))
                    wn = cursor.fetchone()
                    wn = wn[0] + 1
                    cursor.execute("UPDATE warnlist SET warning= " + str(wn) + " where uid=" + str(user_to_warn))
                    db.commit()
                except TypeError:
                    wn = 1
                    cursor.execute("INSERT OR IGNORE INTO warnlist (uid, warning) VALUES (?, ?)", (user_to_warn, wn))
                    db.commit()
                if wn == 3:
                    await bot.ban_chat_member(chat_id, user_to_warn)
                    await message.reply(
                        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é @{up} –≤—ã–Ω–µ—Å–µ–Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ {wn}/3. \nA–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: @{ap} \n–ü—Ä–∏—á–∏–Ω–∞: {pr} \n–î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–∞–Ω–µ–Ω")
                    await message.delete()
                else:
                    await message.reply(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é @{up} –≤—ã–Ω–µ—Å–µ–Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ {wn}/3. \nA–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: @{ap} \n–ü—Ä–∏—á–∏–Ω–∞: {pr}")
                    await message.delete()
            except Exception as e:
                await message.reply("–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–¥–∞—Ç—å –ø—Ä–µ–¥—É–ø–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.")
                await message.delete()
        else:
            await message.delete()

@dp.message(Command('unwarn'))
async def warn_user(message: types.Message):
    if on == 1:
        chat_id = message.chat.id
        user_id = message.from_user.id
        ap = message.from_user.username

        if await is_user_admin(chat_id, user_id) or (message.sender_chat and message.sender_chat.type == "channel" and message.sender_chat.id == -1001951614079):

            try:
                if not message.reply_to_message:
                    t = message.text.split(maxsplit=3)
                    up = t[1]
                    if up[0] == '@':
                        up = up.replace('@', '', 1)
                        user_to_warn = await get_user_simple(up)
                else:
                    t = message.text.split( maxsplit=1)
                    user_to_warn = message.reply_to_message.from_user.id
                    up = message.reply_to_message.from_user.username
                try:
                    cursor.execute("SELECT warning FROM warnlist WHERE uid=" + str(user_to_warn))
                    wn = cursor.fetchone()

                    if wn>0:
                        cursor.execute("UPDATE warnlist SET warning= " + str(wn) + " where uid=" + str(user_to_warn))
                        db.commit()
                        wn = wn[0] - 1
                except TypeError:
                    wn = 0
                    cursor.execute("INSERT OR IGNORE INTO warnlist (uid, warning) VALUES (?, ?)", (user_to_warn, wn))
                    db.commit()
                if wn == 0:
                    await bot.ban_chat_member(chat_id, user_to_warn)
                    await message.reply(
                        f"–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {up} –Ω–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π")
                    await message.delete()
                else:
                    await message.reply(f"–° –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{up} —Å–Ω—è—Ç–æ –æ–¥–Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ ({wn}/3). \nA–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: @{ap}")
                    await message.delete()
            except Exception as e:
                await message.reply("–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É.")
                await message.delete()
        else:
            await message.delete()

@dp.message(Command('ping'))
async def ping(message: types.Message):
    if on == 1:
        await message.reply('–ü–æ–Ω–≥')

@dp.message(Command('help'))
async def help(message: types.Message):
    if message.chat.id in ida:
        await bot.send_message(message.chat.id, helpt)


@dp.message(Command('ban'))
async def ban_user(message: types.Message):
    if on == 1:
        chat_id = message.chat.id
        user_id = message.from_user.id

        if await is_user_admin(chat_id, user_id) or (message.sender_chat and message.sender_chat.type == "channel" and message.sender_chat.id == -1001951614079):

                try:
                    if not message.reply_to_message:
                        t = message.text.split()
                        up = t[1]
                        if up[0] == '@':
                            up = up.replace('@', '', 1)
                            user_to_ban = await get_user_simple(up)
                    else:
                        user_to_ban = message.reply_to_message.from_user.id
                    await bot.ban_chat_member(chat_id, user_to_ban)
                    await message.reply("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–∞–Ω–µ–Ω.")
                    await message.delete()
                except Exception as e:
                    await message.reply("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
                    await message.delete()
        else:
            await message.delete()


@dp.message(Command('rules'))
async def rule(message: types.Message):
    if on == 1:
        await message.reply("–ü—Ä–∞–≤–∏–ª–∞ —á–∞—Ç–∞:\n"+tt)
        await message.delete()


@dp.message(Command('unban'))
async def unban_user(message: types.Message):
    if on == 1:
        chat_id = message.chat.id
        user_id = message.from_user.id

        if await is_user_admin(chat_id, user_id) or (message.sender_chat and message.sender_chat.type == "channel" and message.sender_chat.id == -1001951614079):

            try:
                if not message.reply_to_message:
                    t = message.text.split()
                    up = t[1]
                    if up[0] == '@':
                        up = up.replace('@', '', 1)
                        user_to_ban = await get_user_simple(up)
                else:
                    user_to_ban = message.reply_to_message.from_user.id
                await bot.unban_chat_member(chat_id, user_to_ban)
                await message.reply("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–∞–±–∞–Ω–µ–Ω.")
                await message.delete()
            except Exception as e:
                await message.reply("–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
                await message.delete()
        else:
            await message.delete()


@dp.message(Command('mute'))
async def mute_user(message: types.Message):
    if on == 1:
        chat_id = message.chat.id
        user_id = message.from_user.id

        if not (await is_user_admin(chat_id, user_id) or (message.sender_chat and message.sender_chat.type == "channel" and message.sender_chat.id == -1001951614079)):
            await message.delete()
            return

        try:
            if not message.reply_to_message:
                t = message.text.split()
                if len(t) > 1:
                    up = t[1]
                    if up[0] == '@':
                        up = up.replace('@', '', 1)
                        user_to_mute = await get_user_simple(up)
                    else:
                        await message.reply("–£–∫–∞–∂–∏—Ç–µ @username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
                        await message.delete()
                        return
                else:
                    await message.reply("–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ —É–∫–∞–∂–∏—Ç–µ @username.")
                    await message.delete()
                    return
            else:
                user_to_mute = message.reply_to_message.from_user.id
            target_status = (await bot.get_chat_member(chat_id, user_to_mute)).status
            if target_status in [ChatMemberStatus.ADMINISTRATOR, ChatMemberStatus.CREATOR]:
                await message.reply("–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–º—É—Ç–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
                await message.delete()
                return

            duration = 100000000000000000
            args = message.text.split()
            time_index = None
            for i, arg in enumerate(args):
                if arg.isdigit() and i > 0:
                    try:
                        duration = int(arg)
                        time_index = i
                        break
                    except ValueError:
                        pass


            time_unit = 'min'
            if time_index and time_index + 1 < len(args):
                next_arg = args[time_index + 1].lower()
                if next_arg in ['min', 'm', '–º–∏–Ω', '–º–∏–Ω—É—Ç']:
                    time_unit = 'min'
                elif next_arg in ['h', 'hour', '—á', '—á–∞—Å', '—á–∞—Å–æ–≤']:
                    time_unit = 'h'
                elif next_arg in ['d', 'day', '–¥', '–¥–µ–Ω—å', '–¥–Ω–µ–π']:
                    time_unit = 'd'

            # –í—ã—á–∏—Å–ª—è–µ–º –≤—Ä–µ–º—è –º—É—Ç–∞
            if time_unit == 'min':
                until_date = time.time() + duration * 60
                time_text = f"{duration} –º–∏–Ω—É—Ç"
            elif time_unit == 'h':
                until_date = time.time() + duration * 3600
                time_text = f"{duration} —á–∞—Å–æ–≤"
            elif time_unit == 'd':
                until_date = time.time() + duration * 86400
                time_text = f"{duration} –¥–Ω–µ–π"
            else:
                until_date = time.time() + duration * 60
                time_text = f"{duration} –º–∏–Ω—É—Ç"

            permissions = ChatPermissions(can_send_messages=False)
            await bot.restrict_chat_member(chat_id, user_to_mute, permissions, until_date=until_date)

            target_user = await bot.get_chat_member(chat_id, user_to_mute)
            user_name = f" @{target_user.user.username}"
            if duration==100000000000000000:
                await message.reply(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_name} –∑–∞–º—É—á–µ–Ω –Ω–∞–≤—Å–µ–≥–¥–∞.")
                await message.delete()
            else:
                await message.reply(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_name} –∑–∞–º—É—á–µ–Ω –Ω–∞ {time_text}.")
                await message.delete()
        except Exception as e:
            print(f"Mute error: {e}")
            await message.reply("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–º—É—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
            await message.delete()


@dp.message(Command('unmute'))
async def unmute_user(message: types.Message):
    if on == 1:
        chat_id = message.chat.id
        user_id = message.from_user.id

        if not (await is_user_admin(chat_id, user_id) or (message.sender_chat and message.sender_chat.type == "channel" and message.sender_chat.id == -1001951614079)):
            await message.delete()
            return

        try:
            if not message.reply_to_message:
                t = message.text.split()
                if len(t) > 1:
                    up = t[1]
                    if up[0] == '@':
                        up = up.replace('@', '', 1)
                        user_to_unmute = await get_user_simple(up)
                    else:
                        await message.reply("–£–∫–∞–∂–∏—Ç–µ @username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
                        await message.delete()
                        return
                else:
                    await message.reply("–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ —É–∫–∞–∂–∏—Ç–µ @username.")
                    await message.delete()
                    return
            else:
                user_to_unmute = message.reply_to_message.from_user.id

            permissions = ChatPermissions(
                can_send_messages=True,
                can_send_media_messages=True,
                can_send_other_messages=True,
                can_add_web_page_previews=True
            )

            await bot.restrict_chat_member(chat_id, user_to_unmute, permissions)


            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –¥–ª—è –æ—Ç–≤–µ—Ç–∞
            target_user = await bot.get_chat_member(chat_id, user_to_unmute)
            user_name = target_user.user.first_name
            if target_user.user.last_name:
                user_name += f" {target_user.user.last_name}"
            if target_user.user.username:
                user_name += f" (@{target_user.user.username})"

            await message.reply(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_name} —Ä–∞–∑–º—É—á–µ–Ω.")
            await message.delete()
        except Exception as e:
            print(f"Unmute error: {e}")
            await message.reply("–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑–º—É—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
            await message.delete()

@dp.message(Command('report'))
async def rep(message:types.Message):
    if on == 1:
        global opid, nid, rmessage_id, rchat_id, opun, nun
        if message.reply_to_message:
            print(message.chat.id)
            rchat_id = message.chat.id
            rmessage_id = message.reply_to_message.message_id
            opid = message.from_user.id
            opnm = message.from_user.full_name
            opun = message.from_user.username
            nid = message.reply_to_message.from_user.id
            nnm = message.reply_to_message.from_user.full_name
            nun = message.reply_to_message.from_user.username
            tm = message.reply_to_message.text
            await message.reply('–°–ø–∞—Å–∏–±–æ –∑–∞ –∂–∞–ª–æ–±—É –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ! –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º')
            await message.delete()
            tomsgid = [1758430459, 1042704010, 1132619666,  157398547, 1722862662, 1329032674]
            for i in tomsgid:
                await bot.send_message(i, f'–í —á–∞—Ç–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ–µ <a href="https://t.me/c/1398602500/{rmessage_id}">—Å–æ–æ–±—â–µ–Ω–∏–µ</a>!\n \n \n \n'
                                                    f'{opnm} @{opun} –ø–æ–∂–∞–ª–æ–≤–∞–ª—Å—è –Ω–∞ {nnm} @{nun}\n \n \n \n–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è: {tm} \n'
                                                    f'<a href="https://t.me/c/1398602500/{rmessage_id}">–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é</a>', parse_mode="HTML",
                                                    disable_web_page_preview=True, reply_markup=g.as_markup())
###


        ###

        #
        else:
            await message.reply('–ò—Å–ø–æ–ª—å–∑—É–π —ç—Ç–æ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ')
            await message.delete()



@dp.message(Command('debug'))
async def debug_command(message: types.Message, state: FSMContext):
    await message.answer('–í–≤–µ–¥–∏—Ç–µ –í–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ –∫–∞–∫–æ–º—É-—Ç–æ –ø—Ä–æ–≥–µ—Ä—É')
    await state.set_state(DebugState.waiting_for_debug_message)


@dp.message(DebugState.waiting_for_debug_message)
async def debug_new(message: types.Message, state: FSMContext):
    await bot.forward_message(TO_CHAT_ID, message.chat.id, message.message_id)
    await message.answer('–í–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ')
    await state.clear()


@dp.message(Command('autor'))
async def autor_command(message: types.Message, state: FSMContext):
    if message.chat.id == TO_CHAT_ID:
        await message.answer('–í–≤–µ–¥–∏ –æ—Ç–≤–µ—Ç')
        await state.set_state(AutorState.waiting_for_autor_response)
    else:
        await message.answer('–≠—Ç–∞ —à—Ç—É—á–∫–∞ –Ω–µ –¥–ª—è —Ç–µ–±—è.')


@dp.message(AutorState.waiting_for_autor_response)
async def autor_response(message: types.Message, state: FSMContext):
    await bot.send_message(get_chat_id, message.text)
    await message.answer('–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ')
    await state.clear()


@dp.chat_member(ChatMemberUpdatedFilter(IS_NOT_MEMBER >> IS_MEMBER))
async def on_user_joined_html_mention(event: ChatMemberUpdated):
    global nuid, nuf
    if on == 1:
        user = event.new_chat_member.user
        chat = event.chat
        nuid = user.id
        nuf = user.full_name

        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –±–æ—Ç–æ–≤
        if user.is_bot:
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥–æ–µ —Å–ª–æ–≤–æ –≤ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_words = user.full_name.lower().split() if user.full_name else []

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤
        for word in user_words:
            for banned_pattern in bwp:
                if fnmatch.fnmatch(word, banned_pattern):
                    print(f'True: –Ω–∞–π–¥–µ–Ω–æ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω–æ–µ —Å–ª–æ–≤–æ "{banned_pattern}" –≤ "{word}"')
                    try:
                        await bot.ban_chat_member(chat.id, user.id)
                        return
                    except Exception as e:
                        print(f"–û—à–∏–±–∫–∞ –±–∞–Ω–∞: {e}")

                        return

        user_mention = f'<a href="tg://user?id={user.id}">{user.full_name}</a>'
        welcome_text = (
                f"{user_mention}, –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —á–∞—Ç. –û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ —á–∞—Ç–∞ –Ω–∏–∂–µ:\n" + tt
        )

        permissions = ChatPermissions(can_send_messages=False)
        await bot.restrict_chat_member(chat.id, user.id, permissions)

        await bot.send_message(
            chat.id,
            welcome_text,
            parse_mode="HTML",
            disable_web_page_preview=True,
            reply_markup=captcha.as_markup()
        )



@dp.message(lambda message: any(
    entity.type in ["url", "text_link"]
    for entity in message.entities or []
))
async def handle_entity_links(message: types.Message):
    if on == 1:
        extracted_links = []
        for entity in message.entities or []:
            if entity.type == "url":
                link = message.text[entity.offset:entity.offset + entity.length]
                extracted_links.append(link)
            elif entity.type == "text_link":
                extracted_links.append(entity.url)


        has_forbidden_links = False
        for link in extracted_links:
            link_allowed = False

            for mask in wlu:
                if fnmatch.fnmatch(link, mask):
                    link_allowed = True
                    break

            if not link_allowed:
                has_forbidden_links = True
                break

        if has_forbidden_links:
            chat_id = message.chat.id
            user_id = message.from_user.id

            if not await is_user_admin(chat_id, user_id):
                try:
                    up = message.from_user.username or message.from_user.first_name
                    cursor.execute("SELECT warning FROM warnlist WHERE uid=?", (user_id,))
                    result = cursor.fetchone()

                    if result:
                        wn = result[0] + 1
                        cursor.execute("UPDATE warnlist SET warning=? WHERE uid=?", (wn, user_id))
                    else:
                        wn = 1
                        cursor.execute("INSERT INTO warnlist (uid, warning) VALUES (?, ?)", (user_id, wn))

                    db.commit()

                    if wn >= 3:
                        await bot.ban_chat_member(chat_id, user_id)
                        await message.reply(
                            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é @{up} –≤—ã–Ω–µ—Å–µ–Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ {wn}/3. \n"
                            f"–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏!\n"
                            f"–î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–∞–Ω–µ–Ω"
                        )
                    else:
                        await message.reply(
                            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é @{up} –≤—ã–Ω–µ—Å–µ–Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ {wn}/3. \n"
                            f"–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏!"
                        )

                    await message.delete()

                except Exception as e:
                    print(f"Database error: {e}")
                    await message.reply("–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–¥–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.")


processed_groups = set()


@dp.message(F.content_type.in_([
    ContentType.TEXT,
    ContentType.PHOTO,
    ContentType.VIDEO,
    ContentType.AUDIO,
    ContentType.VOICE,
    ContentType.VIDEO_NOTE,
    ContentType.DOCUMENT
]))
async def bw(message: types.Message):
    if on == 1:
        if message.from_user.id == 777000:
            # –î–ª—è –≥—Ä—É–ø–ø –º–µ–¥–∏–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–ª–∏ –ª–∏ –º—ã —É–∂–µ —ç—Ç—É –≥—Ä—É–ø–ø—É
            if message.media_group_id:
                if message.media_group_id not in processed_groups:
                    processed_groups.add(message.media_group_id)
                    await message.reply("–í –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö –¥–µ–π—Å—Ç–≤—É—é—Ç —Å–ª–µ–¥—É—é—â–∏–µ –ø—Ä–∞–≤–∏–ª–∞:\n" + tt)
            else:
                # –û–¥–∏–Ω–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                await message.reply("–í –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö –¥–µ–π—Å—Ç–≤—É—é—Ç —Å–ª–µ–¥—É—é—â–∏–µ –ø—Ä–∞–≤–∏–ª–∞:\n" + tt)

            return

        chat_id = message.chat.id
        user_id = message.from_user.id
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        if await is_user_admin(chat_id, user_id) or (message.sender_chat and message.sender_chat.type == "channel" and message.sender_chat.id in ALLOWED_CHANNELS):
            return
        if message.sender_chat and message.sender_chat.type == "channel":
                channel_id = message.sender_chat.id
                channel_title = message.sender_chat.title

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ä–∞–∑—Ä–µ—à–µ–Ω –ª–∏ –∫–∞–Ω–∞–ªwarn

                if channel_id not in ALLOWED_CHANNELS:
                    try:
                        # –ë–∞–Ω–∏–º –∫–∞–Ω–∞–ª (–æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π)
                        await bot.ban_chat_sender_chat(
                            chat_id=message.chat.id,
                            sender_chat_id=channel_id
                        )

                        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞
                        await message.delete()
                    except Exception as e:
                        print(f"–û—à–∏–±–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∫–∞–Ω–∞–ª–∞ {channel_title}: {e}")
                        # –ü—ã—Ç–∞–µ–º—Å—è —Ö–æ—Ç—è –±—ã —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
                        try:
                            await message.delete()
                        except:
                            pass
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤
        found_bad_word = False
        soo = message.text.split()

        for word in soo:
            for pattern in banwordlist:
                if fnmatch.fnmatch(word.lower(), pattern):  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ
                    found_bad_word = True
                    break  # –ü—Ä–µ—Ä—ã–≤–∞–µ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Ü–∏–∫–ª
            if found_bad_word:
                break  # –ü—Ä–µ—Ä—ã–≤–∞–µ–º –≤–Ω–µ—à–Ω–∏–π —Ü–∏–∫–ª

        if found_bad_word and not (message.sender_chat and message.sender_chat.type == "channel" and message.sender_chat.id == -1001628633023):
            try:
                up = message.from_user.username or message.from_user.first_name

                # –†–∞–±–æ—Ç–∞ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
                cursor.execute("SELECT warning FROM warnlist WHERE uid=?", (user_id,))
                result = cursor.fetchone()

                if result:
                    wn = result[0] + 1
                    cursor.execute("UPDATE warnlist SET warning=? WHERE uid=?", (wn, user_id))
                else:
                    wn = 1
                    cursor.execute("INSERT INTO warnlist (uid, warning) VALUES (?, ?)", (user_id, wn))

                db.commit()

                if wn >= 3:
                    await bot.ban_chat_member(chat_id, user_id)
                    await message.reply(
                        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é @{up} –≤—ã–Ω–µ—Å–µ–Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ {wn}/3.\n"
                        f"–°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞!\n"
                        f"–î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–∞–Ω–µ–Ω"
                    )
                else:
                    await message.reply(
                        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é @{up} –≤—ã–Ω–µ—Å–µ–Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ {wn}/3.\n"
                        f"–°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞!"
                    )

                await message.delete()

            except Exception as e:
                print(f"–û—à–∏–±–∫–∞: {e}")
                await message.reply("–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–¥–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.")



async def main():
    await dp.start_polling(bot)
#


if __name__ == '__main__':
    asyncio.run(main())